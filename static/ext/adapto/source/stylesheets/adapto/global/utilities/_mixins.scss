// Media Queries
@mixin respond-to($media) {
    /* Landscape phones and down */
    @if $media == phone {
        @media (max-width: $screen-phone) { @content; }
    }
    /* Landscape phone to portrait tablet */
    @else if $media == tablet-portrait {
        @media (max-width: $screen-sm) {@content; }
    }
    /* Portrait tablet to landscape and desktop */
    @else if $media == tablet-landscape-desktop {
        @media (min-width: $screen-sm) and (max-width: $screen-md) { @content; }
    }
    /* Large desktop */
    @else if $media == large-desktop {
        @media (min-width: $screen-lg) { @content; }
    }
    // Specific max width
    @else {
        @media only screen and (max-width: #{$media}px) { @content; }
    }
}


@mixin opacity($value){
  $IEValue: $value*100;
  opacity: $value;
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity="+$IEValue+")";
  filter: alpha(opacity=$IEValue);
}

@mixin respondto($media...) {
    @each $mediatype in $media {
        @include respond-to($mediatype) {@content}
    }
}

// needed for owl slider
@mixin triangle-right ($color) {
  width: 0px;
  height: 0px;
  border-style: solid;
  border-width: 30px 0 30px 20px;
  border-color: transparent transparent transparent $color;
}
@mixin triangle-left ($color) {
  width: 0px;
  height: 0px;
  border-style: solid;
  border-width: 30px 20px 30px 0;
  border-color: transparent $color transparent transparent;
}


@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
         (-o-min-device-pixel-ratio: 2.6/2),
         (-webkit-min-device-pixel-ratio: 1.3),
         (min-device-pixel-ratio: 1.3),
         (min-resolution: 1.3dppx) {
    /* on retina, use image that's scaled by 2 */
    background-image: url($image);
    background-size: $width $height;
  }
}

@mixin image2x($url) {
  background-image: url($url);
  @media
    only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (   min--moz-device-pixel-ratio: 2),
    only screen and (     -o-min-device-pixel-ratio: 2/1),
    only screen and (        min-device-pixel-ratio: 2),
    only screen and (                min-resolution: 192dpi),
    only screen and (                min-resolution: 2dppx) { 
      /* Retina-specific stuff here */
  }
}

@mixin prefixed($property, $value) {
    -webkit-#{$property}: $value;
       -moz-#{$property}: $value;
        -ms-#{$property}: $value;
         -o-#{$property}: $value;
            #{$property}: $value;
}

@mixin vendor($property, $value...){
    -webkit-#{$property}:$value;
       -moz-#{$property}:$value;
        -ms-#{$property}:$value;
         -o-#{$property}:$value;
            #{$property}:$value;
}
@mixin transition ($transition-property, $transition-time, $method) {
  -webkit-transition: $transition-property $transition-time $method;
  -moz-transition: $transition-property $transition-time $method;
  -ms-transition: $transition-property $transition-time $method;
  -o-transition: $transition-property $transition-time $method;
  transition: $transition-property $transition-time $method;
}

@mixin prefixer($property, $value) {
     @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
          #{$prefix}#{$property}: $value;
     }
}


@mixin social-media-colors($color) {
  .ai-facebook,
  .ai-facebook2,
  .ai-facebook3 {
    color: $color;
    @include transition(all, .25s, ease-in-out);
    &:hover {
      color: $facebook;
      @include transition(all, .25s, ease-in-out);
    }
  }
  .ai-twitter, 
  .ai-twitter2, 
  .ai-twitter3 {
    color: $color;
    @include transition(all, .25s, ease-in-out);
    &:hover {
      color: $twitter;
      @include transition(all, .25s, ease-in-out);
    }
  }
  .ai-google, 
  .ai-google-plus, 
  .ai-google-plus2, 
  .ai-google-plus3,
  .ai-google-plus4 {
    color: $color;
    @include transition(all, .25s, ease-in-out);
    &:hover {
      color: $googleplus;
      @include transition(all, .25s, ease-in-out);
    }
  }
  .ai-linkedin {
    color: $color;
    @include transition(all, .25s, ease-in-out);
    &:hover {
      color: $linkedin;
      @include transition(all, .25s, ease-in-out);
    }
  }
  .ai-picassa,
  .ai-picassa2 {
    color: $color;
    @include transition(all, .25s, ease-in-out);
    &:hover {
      color: $picasa;
      @include transition(all, .25s, ease-in-out);
    }
  }
  .ai-soundcloud, 
  .ai-soundcloud2  {
    color: $color;
    @include transition(all, .25s, ease-in-out);
    &:hover {
      color: $soundcloud;
      @include transition(all, .25s, ease-in-out);
    }
  }
}


